# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-05-24 20:57
from __future__ import unicode_literals

import apps.gp.model_fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    replaces = [('gp', '0001_initial'), ('gp', '0002_auto_20160907_2131'), ('gp', '0003_sugarcrmconnection'), ('gp', '0004_auto_20160909_1703'), ('gp', '0005_auto_20160909_1948'), ('gp', '0006_auto_20160920_1538'), ('gp', '0007_gearmap_last_sent_stored_data_creation_date'), ('gp', '0008_auto_20161004_1633'), ('gp', '0009_auto_20161004_2134'), ('gp', '0010_remove_mailchimpconnection_url'), ('gp', '0011_plugspecification_extra'), ('gp', '0012_remove_plugspecification_extra'), ('gp', '0013_controllerlog'), ('gp', '0014_gearmap_last_source_update'), ('gp', '0015_auto_20161123_2157'), ('gp', '0016_googlespreadsheetsconnection'), ('gp', '0017_auto_20161226_1636'), ('gp', '0018_auto_20161230_1558'), ('gp', '0019_auto_20170118_1717'), ('gp', '0020_auto_20170118_1718'), ('gp', '0021_bitbucketconnection_slackconnection'), ('gp', '0022_jiraconnection'), ('gp', '0023_googleformsconnection'), ('gp', '0024_twitterconnection'), ('gp', '0025_auto_20170503_1906'), ('gp', '0026_category_connectiondata_geardata_plugdata_surveymonkeyconnection'), ('gp', '0027_auto_20170517_1933')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('source', 'Source'), ('target', 'Target')], default='source', max_length=7)),
                ('name', models.CharField(max_length=120, verbose_name='name')),
                ('description', models.CharField(max_length=300, verbose_name='description')),
                ('is_active', models.BooleanField(default=False, verbose_name='is active')),
            ],
        ),
        migrations.CreateModel(
            name='ActionSpecification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='name')),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action_specification', to='gp.Action')),
            ],
        ),
        migrations.CreateModel(
            name='Connection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last update')),
            ],
        ),
        migrations.CreateModel(
            name='Connector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='name')),
                ('is_active', models.BooleanField(default=False, verbose_name='is active')),
                ('css_class', models.CharField(blank=True, max_length=40, verbose_name='css class')),
                ('is_source', models.BooleanField(default=False, verbose_name='is source')),
                ('is_target', models.BooleanField(default=False, verbose_name='is target')),
                ('icon', models.ImageField(default=None, null=True, upload_to='connector/icon', verbose_name='icon')),
            ],
            options={
                'verbose_name': 'connector',
            },
        ),
        migrations.CreateModel(
            name='FacebookConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('token', models.CharField(max_length=300, verbose_name='token')),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='connection_facebook', to='gp.Connection')),
            ],
        ),
        migrations.CreateModel(
            name='Gear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='name')),
                ('is_active', models.BooleanField(default=False, verbose_name='is active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last update')),
            ],
        ),
        migrations.CreateModel(
            name='GearMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last update')),
                ('is_active', models.BooleanField(default=True, verbose_name='is active')),
                ('gear', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='gear_map', to='gp.Gear')),
            ],
        ),
        migrations.CreateModel(
            name='GearMapData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_name', models.CharField(max_length=300, verbose_name='target name')),
                ('source_value', models.CharField(max_length=300, verbose_name='source value')),
                ('gear_map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gear_map_data', to='gp.GearMap')),
            ],
        ),
        migrations.CreateModel(
            name='MySQLConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('host', models.CharField(max_length=200, verbose_name='host')),
                ('database', models.CharField(max_length=200, verbose_name='database')),
                ('table', models.CharField(max_length=200, verbose_name='table')),
                ('port', models.CharField(max_length=7, verbose_name='port')),
                ('connection_user', models.CharField(max_length=60, verbose_name='user')),
                ('connection_password', models.CharField(max_length=40, verbose_name='password')),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='connection_mysql', to='gp.Connection')),
            ],
        ),
        migrations.CreateModel(
            name='Plug',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='name')),
                ('plug_type', models.CharField(choices=[('source', 'Source'), ('target', 'Target')], default='source', max_length=7)),
                ('is_active', models.BooleanField(default=False, verbose_name='is active')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last update')),
                ('action', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gp.Action')),
                ('connection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plug', to='gp.Connection')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlugSpecification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1000, verbose_name='value')),
                ('action_specification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gp.ActionSpecification')),
                ('plug', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plug_specification', to='gp.Plug')),
            ],
        ),
        migrations.CreateModel(
            name='StoredData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='name')),
                ('value', models.CharField(blank=True, default='', max_length=3000, verbose_name='value')),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.CharField(max_length=150, null=True, verbose_name='object_id')),
                ('connection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stored_data', to='gp.Connection')),
                ('plug', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stored_data', to='gp.Plug')),
            ],
        ),
        migrations.AddField(
            model_name='gearmap',
            name='last_sent_stored_data',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gear_map', to='gp.StoredData'),
        ),
        migrations.AddField(
            model_name='gear',
            name='source',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='source_gear', to='gp.Plug'),
        ),
        migrations.AddField(
            model_name='gear',
            name='target',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='target_gear', to='gp.Plug'),
        ),
        migrations.AddField(
            model_name='gear',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='connection',
            name='connector',
            field=models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to='gp.Connector'),
        ),
        migrations.AddField(
            model_name='connection',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='action',
            name='connector',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='action', to='gp.Connector'),
        ),
        migrations.AlterUniqueTogether(
            name='plugspecification',
            unique_together=set([('plug', 'action_specification')]),
        ),
        migrations.AddField(
            model_name='gearmap',
            name='last_sent_stored_data_creation_date',
            field=models.DateTimeField(default=None, null=True, verbose_name='last sent storeddata creation date'),
        ),
        migrations.AddField(
            model_name='gearmap',
            name='last_source_update',
            field=models.DateTimeField(default=None, null=True),
        ),
        migrations.AlterUniqueTogether(
            name='gearmap',
            unique_together=set([('id', 'gear')]),
        ),
        migrations.CreateModel(
            name='SugarCRMConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('url', models.CharField(max_length=200, verbose_name='url')),
                ('connection_user', models.CharField(max_length=200, verbose_name='user')),
                ('connection_password', models.CharField(max_length=200, verbose_name='password')),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='connection_sugarcrm', to='gp.Connection')),
            ],
        ),
        migrations.CreateModel(
            name='MailChimpConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('url', models.CharField(max_length=200, verbose_name='url')),
                ('connection_user', models.CharField(max_length=200, verbose_name='user')),
                ('connection_password', models.CharField(max_length=200, verbose_name='password')),
                ('api_key', models.CharField(max_length=200, verbose_name='api key')),
            ],
        ),
        migrations.AddField(
            model_name='connection',
            name='is_deleted',
            field=models.BooleanField(default=False, verbose_name='is deleted'),
        ),
        migrations.AddField(
            model_name='mailchimpconnection',
            name='connection',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='connection_mailchimp', to='gp.Connection'),
        ),
        migrations.RemoveField(
            model_name='mailchimpconnection',
            name='connection_password',
        ),
        migrations.RemoveField(
            model_name='mailchimpconnection',
            name='url',
        ),
        migrations.CreateModel(
            name='ControllerLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('level', models.CharField(max_length=10)),
                ('message', models.TextField()),
                ('module', models.CharField(blank=True, default='', max_length=30)),
                ('process', models.CharField(blank=True, default='', max_length=20)),
                ('status', models.CharField(choices=[('f', 'Failed'), ('s', 'Successful')], default='f', max_length=2)),
                ('controller', models.CharField(blank=True, default='', max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GoogleSpreadSheetsConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('credentials_json', apps.gp.model_fields.JSONField(blank=True, null=True)),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='connection_googlespreadsheets', to='gp.Connection')),
            ],
        ),
        migrations.CreateModel(
            name='PostgreSQLConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('host', models.CharField(max_length=200, verbose_name='host')),
                ('database', models.CharField(max_length=200, verbose_name='database')),
                ('table', models.CharField(max_length=200, verbose_name='table')),
                ('port', models.CharField(max_length=7, verbose_name='port')),
                ('connection_user', models.CharField(max_length=60, verbose_name='user')),
                ('connection_password', models.CharField(max_length=40, verbose_name='password')),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='connection_postgresql', to='gp.Connection')),
            ],
        ),
        migrations.CreateModel(
            name='MSSQLConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('host', models.CharField(max_length=200, verbose_name='host')),
                ('database', models.CharField(max_length=200, verbose_name='database')),
                ('table', models.CharField(max_length=200, verbose_name='table')),
                ('port', models.CharField(max_length=7, verbose_name='port')),
                ('connection_user', models.CharField(max_length=60, verbose_name='user')),
                ('connection_password', models.CharField(max_length=40, verbose_name='password')),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='connection_mssql', to='gp.Connection')),
            ],
        ),
        migrations.CreateModel(
            name='BitbucketConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('connection_user', models.CharField(max_length=60, verbose_name='user')),
                ('connection_password', models.CharField(max_length=40, verbose_name='password')),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='connection_bitbucket', to='gp.Connection')),
            ],
        ),
        migrations.CreateModel(
            name='SlackConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('token', models.CharField(max_length=100, verbose_name='token')),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='connection_slack', to='gp.Connection')),
            ],
        ),
        migrations.CreateModel(
            name='JiraConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('host', models.CharField(max_length=200, verbose_name='host')),
                ('connection_user', models.CharField(max_length=60, verbose_name='user')),
                ('connection_password', models.CharField(max_length=40, verbose_name='password')),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='connection_jira', to='gp.Connection')),
            ],
        ),
        migrations.CreateModel(
            name='GoogleFormsConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('credentials_json', apps.gp.model_fields.JSONField(blank=True, null=True)),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='connection_googleforms', to='gp.Connection')),
            ],
        ),
        migrations.CreateModel(
            name='TwitterConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('token', models.CharField(max_length=300, verbose_name='token')),
                ('token_secret', models.CharField(max_length=300, verbose_name='token')),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='connection_twitter', to='gp.Connection')),
            ],
        ),
        migrations.CreateModel(
            name='GetResponseConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('api_key', models.CharField(max_length=200, verbose_name='api key')),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='connection_getresponse', to='gp.Connection')),
            ],
        ),
        migrations.CreateModel(
            name='GoogleContactsConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('credentials_json', apps.gp.model_fields.JSONField(blank=True, null=True)),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='connection_googlecontacts', to='gp.Connection')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='SurveyMonkeyConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('token', models.CharField(max_length=300, verbose_name='token')),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='connection_surveymonkey', to='gp.Connection')),
            ],
        ),
        migrations.CreateModel(
            name='ConnectorCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Connector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gp.Connector')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gp.Category')),
            ],
            options={
                'db_table': 'gp_connector__category',
            },
        ),
        migrations.CreateModel(
            name='GoogleCalendarConnection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('credentials_json', apps.gp.model_fields.JSONField(blank=True, null=True)),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='connection_googlecalendar', to='gp.Connection')),
            ],
        ),
        migrations.CreateModel(
            name='GooglePushWebhook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_id', models.CharField(max_length=200, verbose_name='channel_id')),
                ('resource_id', models.CharField(max_length=200, verbose_name='resource_id')),
                ('expiration', models.CharField(max_length=200, verbose_name='expiration')),
                ('raw_expiration', models.CharField(max_length=200, verbose_name='raw_expiration')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('last_update', models.DateTimeField(auto_now=True, verbose_name='last update')),
                ('connection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='google_push_webhook', to='gp.Connection')),
            ],
        ),
        migrations.AddField(
            model_name='connector',
            name='category',
            field=models.ManyToManyField(through='gp.ConnectorCategory', to='gp.Category'),
        ),
    ]
